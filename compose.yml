services:
  shell:
    image: micro-usf
    build:
      context: .
      dockerfile: docker/Dockerfile

  postgresdb:
    image: postgres:18
    volumes:
      - ./docker/postgres_initdb:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=usf
      - POSTGRES_USER=usf
    ports:
      - "5432:5432"

  redis:
    image: redis:8
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "5552:5552"
      - "5672:5672"
      - "15672:15672"

  tempo-init:
    image: grafana/tempo:main-5165b89
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./services/tempo-data:/var/tempo

  tempo:
    image: grafana/tempo:main-5165b89
    command: ["-config.file=/etc/tempo.yml"]
    depends_on:
      - tempo-init
      - redis
    volumes:
      - ./services/tempo.yml:/etc/tempo.yml
      - ./services/tempo-data:/var/tempo
    ports:
      - "3200:3200"  # UI
      - "4317:4317"  # OTLP gRPC

  prometheus:
    image: prom/prometheus:v3.6.0
    ports:
      - "9090:9090"
        
  grafana:
    image: grafana/grafana:12.0.0
    depends_on:
      - prometheus
      - tempo
    volumes:
      - ./services/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
      - GF_PLUGINS_PREINSTALL_SYNC=https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
    ports:
      - "3000:3000"

  mongodb:
    image: mongo:8.0.14-noble
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: usf
      MONGO_INITDB_ROOT_PASSWORD: usf

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    depends_on:
      - mongodb
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: usf
      ME_CONFIG_BASICAUTH_PASSWORD: usf
      ME_CONFIG_MONGODB_URL: mongodb://usf:usf@mongodb:27017/

  apicurio-registry:
    image: apicurio/apicurio-registry:3.0.15
    ports:
      - "8080:8080"

  apicurio-registry-ui:
    image: apicurio/apicurio-registry-ui:3.0.15
    depends_on:
      - apicurio-registry
    ports:
      - "8888:8080"

  availability:
    image: micro-usf
    hostname: docker-usf-items
    depends_on:
      - postgresdb
    ports:
      - "8300:8300"
    volumes:
      - ./used_stuff_market/availability:/usr/src/availability
    working_dir: /usr/src/availability
    command: bash -c 'alembic upgrade head && uvicorn availability.api:app --host 0.0.0.0 --port 8300 --reload'

  items:
    image: micro-usf
    hostname: docker-usf-items
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
      - "8100:8100"
    volumes:
      - ./used_stuff_market/items:/usr/src/items
    working_dir: /usr/src/items
    command: bash -c 'alembic upgrade head && uvicorn items.api:app --host 0.0.0.0 --port 8100 --reload'

  items-outbox-processor:
    image: micro-usf
    hostname: docker-usf-items-outbox-processor
    depends_on:
      - postgresdb
      - rabbitmq
    volumes:
      - ./used_stuff_market/items:/usr/src/items
    working_dir: /usr/src/items
    environment:
      PYTHONPATH: /usr/src/items
    command: watchfiles "python items/outbox_processor.py" /usr/src/items

  catalog:
    image: micro-usf
    hostname: docker-usf-catalog
    depends_on:
      - mongodb
      - rabbitmq
    ports:
      - "8400:8400"
    volumes:
      - ./used_stuff_market/catalog:/usr/src/catalog
    working_dir: /usr/src/catalog
    environment:
      PYTHONPATH: /usr/src/catalog
    command: bash -c 'python catalog/migrations.py && uvicorn catalog.api:app --host 0.0.0.0 --port 8400 --reload'

  catalog-consumer:
    image: micro-usf
    hostname: docker-usf-catalog-consumer
    depends_on:
      - rabbitmq
    volumes:
      - ./used_stuff_market/catalog:/usr/src/catalog
    working_dir: /usr/src/catalog
    environment:
      PYTHONPATH: /usr/src/catalog
    command: watchfiles "python catalog/consumer.py" /usr/src/catalog

  likes:
    image: micro-usf
    hostname: docker-usf-likes
    depends_on:
      - postgresdb
      - rabbitmq
    ports:
      - "8500:8500"
    volumes:
      - ./used_stuff_market/likes:/usr/src/likes
    working_dir: /usr/src/likes
    command: bash -c 'alembic upgrade head && uvicorn likes.api:app --host 0.0.0.0 --port 8500 --reload'
